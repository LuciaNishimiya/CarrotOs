#!/bin/bash

# Colores para visualizaci√≥n
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
RESET=$(tput sgr0)

# Configuraci√≥n
URL="https://discord.com/api/download?platform=linux&format=deb"
TMP_FILE=$(mktemp --suffix=.deb)

echo "‚è≥ Obteniendo informaci√≥n de la √∫ltima versi√≥n..."

# Obtener URL final (redirigida) que contiene la versi√≥n real
LOCATION=$(curl -sI "$URL" | grep -i '^location:' | tr -d '\r' | awk '{print $2}')
VERSION_REMOTE=$(echo "$LOCATION" | grep -oP '\d+\.\d+\.\d+' | head -n1 | tr -d '[:space:]')


if [ -z "$VERSION_REMOTE" ]; then
    echo "${RED}‚ùå No se pudo determinar la versi√≥n remota.${RESET}"
    exit 1
fi

echo "üîé √öltima versi√≥n disponible: $VERSION_REMOTE"

# Ruta real del archivo de versi√≥n instalado
BUILD_INFO="/usr/share/discord/resources/build_info.json"

# Verificar si est√° instalado
if [ -f "$BUILD_INFO" ]; then
    VERSION_LOCAL=$(grep version "$BUILD_INFO" | grep -oP '\d+\.\d+\.\d+' | tr -d '[:space:]')
    echo "üì¶ Versi√≥n instalada: $VERSION_LOCAL"
else
    echo "${RED}‚ö†Ô∏è Discord no est√° instalado o no se encontr√≥ build_info.json${RESET}"
    VERSION_LOCAL="0.0.0"
fi

# Comparar versiones
if [ "$VERSION_REMOTE" = "$VERSION_LOCAL" ]; then
    echo "${GREEN}‚úÖ Ya tienes la √∫ltima versi√≥n instalada.${RESET}"
    exit 0
fi

# Descargar nuevo .deb
echo "‚¨áÔ∏è Descargando Discord $VERSION_REMOTE..."
wget -qO "$TMP_FILE" "$LOCATION"

if [ $? -ne 0 ]; then
    echo "${RED}‚ùå Error al descargar el archivo.${RESET}"
    exit 1
fi

# Instalar
echo "üõ†Ô∏è Instalando Discord..."
sudo dpkg -i "$TMP_FILE"
if [ $? -ne 0 ]; then
    echo "${RED}‚ö†Ô∏è Fallo en la instalaci√≥n. Reparando dependencias...${RESET}"
    sudo apt -f install -y
    if [ $? -ne 0 ]; then
        echo "${RED}‚ùå Error al reparar dependencias.${RESET}"
        rm -f "$TMP_FILE"
        exit 1
    fi
fi

# Limpiar archivo temporal
echo "üßπ Limpiando archivo temporal..."
rm -f "$TMP_FILE"

echo "${GREEN}‚úÖ Discord $VERSION_REMOTE instalado correctamente.${RESET}"

